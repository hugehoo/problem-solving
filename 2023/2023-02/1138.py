N = int(input())
nums = list(map(int, input().split()))
result = [0] * N

for n in range(N):
    count = 0
    for i in range(N):
        if result[i] == 0 and count == nums[n]:
            result[i] = n + 1
            break
        elif result[i] == 0:
            count += 1
print(*result)
        
    
"""
가장 마지막 수 외에서 0이 나온다? 자기보다 큰 수는 모두 자기 뒤에 있다.

6
3 4 3 0 0 0
> 456123

1<= N <= 10
4
2 1 1 0
1: 234
2: 34 _> 2개가 있어야하는데, 1개만 있다고 뜬다. 그럼 무조건 4가 왼쪽이고, 3은 없구나.
3: 4
4:
4 3 2 1
자기 인덱스에서 나오는 값은, 자신보다 크면서 N 이하의 수들.

324

사실 1은 바로 자리수를 구할 수 있네.
다 자기보다 크니까
1이 자리를 잡으면,
2는? 2가 이제 1인 셈이지. 다 자기보다 크니까
2 -> 1 이면, 3,4 중 하나만 앞에 있다. 그럼 1을 보자. 1의 값은 2다.
5
2 3 0 1 0

>>> 35412
1: 6 -> 걍 6 + 1 번째 수.
6 : 0 -> 7이 자기보다 뒤에있다. 6,...,7
5 : 2 -> 6, 7이 자기보다 앞에 있다. 6,..,7,..,5
4: 1 -> 6,,,4,,,7,,,5
3: 1 -> 6,,3,,4,,7,,5
2: 1 -> 6,,2,,3,,4,,7,,5

1 : 5 -> 6번째
5: 1 -> 6이 자신보다 앞에 -> 6,,5,,,,1
4 : 2 -> 6,,5,,4,,1
3: 3 -> 6,,5,,4,,3,,1
2: 4 -> 654321
"""
